<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!--开启基于注解的IOC-->
    <context:component-scan base-package="cn.jicl"/>
    <!--开启基于注解的AOP-->
    <aop:aspectj-autoproxy/>

    <aop:config>
        <!--配置公共切面（能在任意切面上使用）-->
        <aop:pointcut id="commonPoint"
                      expression="execution(public double cn.jicl.service.MyCalculator.sub(double,double))"/>
        <!--指定切面类（可以指定多个）：相当于加了Aspect注解-->
        <aop:aspect ref="myCalculatorAspect2">
            <!--配置公共切面（只能在当前切面上使用）-->
            <aop:pointcut id="point"
                          expression="execution(public double cn.jicl.service.MyCalculator.sub(double,double))"/>
            <!--配置前置通知-->
            <aop:before method="beforeStart"
                        pointcut="execution(public double cn.jicl.service.MyCalculator.sub(double,double))"/>
            <!--配置返回通知-->
            <aop:after-returning method="afterReturnning" pointcut-ref="point" returning="result"/>
            <!--配置异常通知-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="point" throwing="e"/>
            <!--配置后置通知-->
            <aop:after method="afterEnd" pointcut-ref="point"/>
            <!--配置环绕通知-->
            <aop:around method="surround" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>
    <!--一般主要的切面使用配置，不重要的切面使用注解-->

    <!--引用外部配置文件(使用context名称空间)
        用来加载外部配置文件-->
    <context:property-placeholder location="classpath:config/dbconfig.properties"/>
    <!--可以让spring帮我们管理数据库连接池对象（单例）
        配置数据源
    -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="jdbcUrl" value="${jdbc_jdbcUrl}"/>
        <property name="driverClass" value="${jdbc_driverClass}"/>
    </bean>

    <!-- 配置 Spirng 的 JdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--事务控制-->
    <!--1.配置事务管理器（进行事务控制）-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--2.开启基于事务注解的事务注解模式（依赖tx名称空间）-->
    <tx:annotation-driven/>


    <!--基于XML配置的事务管理(写起来麻烦，还是推荐使用注解)-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="myPoint" expression="execution(* cn.jicl.service.*.*(..))" />-->
        <!--<aop:advisor advice-ref="myAdvice" pointcut-ref="myPoint"/>-->
    <!--</aop:config>-->
    <!--配置事务管理器-->
    <!--<tx:advice id="myAdvice">-->
        <!--事务属性-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" propagation="REQUIRES_NEW"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
</beans>