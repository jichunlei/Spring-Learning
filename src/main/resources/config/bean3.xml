<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!--使用注解快速注入bean到容器中
        1.@Controller：用在表现层，对来自前端的请求进行转发处理与重定向
        2.@Service：用在业务层，用来处理业务逻辑
        3.@Repository：在持久层，标注 DAO 类，表示这个类可以对数据库进行数据的读取或者写入
        4.@Component：基础注解，表示一个 JavaBean 可以被注入到 Spring 容器中
        注：spring不区分以上四个注解（可以任意使用），只是推荐使用，方便查看类属于哪一层（规范）
        -->
    <!--配置自动扫描路径-->
    <context:component-scan base-package="cn.jicl" use-default-filters="false">
        <!--context:exclude-filter：排除不需要注入的组件
            排除规则type：
                1)annotation:按照注解进排除，expression为注解全类名
                2)assignable:指定排除某个具体的类，expression为类的全类名
                后三中基本不使用（了解即可）
                3)aspectj:aspectj表达式
                4)custom:自定义TypeFilter接口实现类，可以自定义过滤条件
                5)regex: 使用正则表达式过滤
        -->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->

        <!--指定只扫描哪些组件进来（默认全部扫描进来use-default-filters=true），用法与上述类似，
            但是需要禁用默认的过滤规则，即设置use-default-filters=false
            如果expression是component，则表示注入所有的加注解的bean，不管注解是否是service、controller等-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>


    <!--@Autowired自动装配
        1）根据类的类型查找容器
            1.1）如果找到唯一的，则注入
            1.2）如果没有找到，抛异常
            1.3）如果找到多个
                1.3.1）以变量名作为id查找容器
                    1.3.1.1）如果找到则注入
                    1.3.1.2）如果没找到抛异常

     @Qualifier:可以指定@Autowired装配bean的id
     注意：@Autowired表示一定得装配上属性，否则抛异常，所以可以使用里面的
            required属性设置为false（默认为true）来解除限制，找不到不抛异常，属性为null
     -->
    <!--@Resource自动装配：
        1）jdk中的自动装配注解
        2）相比较于@Autowired扩展性强（@Autowired只能用于spring框架）-->
</beans>